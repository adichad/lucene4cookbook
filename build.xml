<?xml version="1.0"?>
<project name="lucene4cookbook" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" >
	<property environment="env" />
	<property name="jar.src" value="src" />
  <property name="jar.src.main.java" value="src/main/java" />
  <property name="jar.src.main.scala" value="src/main/scala" />
  <property name="jar.src.test.java" value="src/test/java" />
  <property name="jar.build" value="build" />
	<property name="jar.classes" value="build/classes" />
	<property name="jar.classes.main" value="build/classes/main" />
	<property name="jar.classes.test" value="build/classes/test/unit" />
  <property name="jar.lib" value="lib/runtime/jar" />
  <property name="jar.lib.build" value="lib/build/jar" />
	<property name="jar.dest" value="lib" />

	<property name="war.dest" value="build" />
	<property name="war.src" value="WebContent" />

	<property name="java.build" value="." />
	<property name="reports.tests" value="reports/test" />

	<property file="build/build.properties" />
	<property file="build/default.properties" />

	<path id="src.path.java">
		<fileset dir="${jar.src.main.java}">
			<include name="**/*.java" />
		</fileset>
	</path>

	<path id="src.path.scala">
		<fileset dir="${jar.src.main.scala}">
			<include name="**/*.scala" />
		</fileset>
	</path>

	<path id="jar.classpath.main">
		<pathelement path="${jar.classes.main}" />
		<fileset dir="${jar.lib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${jar.lib.build}">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<target name="precompile">
    <mkdir dir="${jar.classes.main}" />
    <ivy:retrieve file="build/ivy.xml" pattern="lib/[conf]/[type]/[artifact]-[revision].[ext]" />
	  <taskdef classpathref="jar.classpath.main" resource="tasks.properties" />
	  <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${jar.lib.build}/scala-compiler-2.9.2.jar" />
        <pathelement location="${jar.lib}/scala-library-2.9.2.jar" />
      </classpath>
    </taskdef>
  </target>

  
  <target name="precompiletest">
		<mkdir dir="${jar.classes.test}" />
		<mkdir dir="${reports.tests}/coverage" />
    <mkdir dir="${reports.tests}/results/xml" />
    <mkdir dir="${reports.tests}/data" />

  </target>

	<target name="compile" depends="precompile">
		<!-- Compile and package -->

		<scalac srcdir="${jar.src.main.scala}" destdir="${jar.classes.main}">
      <classpath refid="jar.classpath.main" />
      <include name="**/*.scala"/>
    </scalac>
		<javac srcdir="${jar.src.main.java}" destdir="${jar.classes.main}" target="1.7" debug="on" includeantruntime="false">
			<classpath refid="jar.classpath.main" />
			<include name="**/*.java" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>

		<jar destfile="${jar.dest}/${component.name}.jar" basedir="${jar.classes.main}" update="true" />
		<!--war destfile="${war.dest}/${component.name}.war" basedir="${war.src}" webxml="${war.src}/WEB-INF/web.xml" update="true" /-->
	</target>

	<target name="clean">
		<delete dir="${jar.classes.main}" />
		<delete>
			<fileset dir="${jar.dest}">
				<include name="${component.name}.jar" />
			</fileset>
			<fileset dir="${war.dest}">
				<include name="${component.name}.war" />
			</fileset>
		</delete>
	</target>

	<target name="testcompile" depends="precompiletest">
		<javac srcdir="${jar.src.test.java}" destdir="${jar.classes.test}" target="1.7" debug="on" includeantruntime="false">
			<classpath refid="test.class.path" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>
    <jar destfile="${jar.dest}/${component.name}-test.jar" basedir="${jar.classes.test}" update="true" />

	</target>

	<target name="testrun" depends="compile,testcompile">
		<delete>
			<fileset dir=".">
				<include name="cobertura.ser" />
			</fileset>
    </delete>
		<cobertura-instrument todir="${jar.build}/instrumented-classes/main">
      <fileset dir="${jar.classes.main}">
				<include name="**/*.class" />
				<exclude name="**/*Test*" />
			</fileset>
		</cobertura-instrument>
		<copy todir="/tmp/data">
			<fileset dir="${reports.tests}/data" />
		</copy>
		<junit haltonfailure="true" printsummary="yes">
			<classpath refid="junit.class.path" />
			<classpath refid="class.path" />
			<classpath refid="test.class.path" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.tests}/results/xml" haltonfailure="false">
				<fileset dir="${jar.src.test.java}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${reports.tests}/results/xml">
			<fileset dir="${reports.tests}/results/xml">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.tests}/results" />
		</junitreport>
		<cobertura-report srcdir="${java.src.main.java}" destdir="${reports.tests}/coverage" />
	</target>
	<target name="release" depends="testrun">
		<input message="Enter comment to log with this commit:-" addproperty="svn.comment" />
	</target>

</project>
